"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0, hide = TRUE)
View(kommun2)
# ----- Färg för årtal (en färg/år) -----
pal_fun <- colorRampPalette(c("darkred", "#d73027", "#fee08b", "#1a9850"))
yrs <- kommun2$op_ar_text
year_breaks <- function(x) {
rng <- range(x, na.rm = TRUE)
if (any(!is.finite(rng))) return(NULL)
b <- seq(rng[1], rng[2], by = 1)
if (length(b) < 2) c(rng[1] - 1, rng[2] + 1) else b
}
brks <- year_breaks(kommun2$ar_num)
mapview(kommun2, zcol = "op_ar_text", at = brks,
col.regions = pal_fun,
na.color = "black",
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0, hide = TRUE)
# 34 färger, från grönt (#1a9850) till rött (#d73027)
pal_34 <- colorRampPalette(c("#1a9850", "#d73027"))(34)
# dina breaks
brks <- year_breaks(kommun2$ar_num)
mapview(kommun2,
zcol = "ar_num",
at = brks,
col.regions = pal_34,   # en färg per år
na.color = "black",     # "Inaktuell..." blir svart
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi"))
View(kommun2)
mapview(kommun2,
zcol = "op_ar_text",
at = brks,
col.regions = pal_34,   # en färg per år
na.color = "black",     # "Inaktuell..." blir svart
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi"))
# 1) År som integer + faktor
kommun2 <- kommun2 %>%
mutate(
ar_num = suppressWarnings(as.integer(readr::parse_number(op_ar_text))),
ar_fac = factor(ar_num, levels = sort(unique(ar_num)), ordered = TRUE)
)
# 2) DINA fasta färger (grönt -> rött), en per år
cols <- c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#C6D750","#DBDF50","#F1E750","#F4DA49","#F7CD42","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FC8C21","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F64B00","#F13E00","#ED3100","#E92400","#E51700","#E10A00",
"#DD0000","#D71000","#D12000","#CB3000","#C54000","#D73027"
)
# säkerställ att antalet färger matchar antalet år (trimma/återanvänd vid behov)
n_yrs <- nlevels(kommun2$ar_fac)
pal   <- if (length(cols) >= n_yrs) cols[seq_len(n_yrs)] else rep(cols, length.out = n_yrs)
# 3) Karta: kategorisk färgsättning, svart för "Inaktuell…"
mapview(kommun2,
zcol = "ar_fac",                # faktor = kategorisk legend med år
col.regions = pal,              # exakt en färg per år
na.color = "black",             # "Inaktuell…" (ej år) blir svart
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# 2) DINA fasta färger, men omvänd ordning (rött -> grönt)
cols <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#C6D750","#DBDF50","#F1E750","#F4DA49","#F7CD42","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FC8C21","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F64B00","#F13E00","#ED3100","#E92400","#E51700","#E10A00",
"#DD0000","#D71000","#D12000","#CB3000","#C54000","#D73027"
))
# säkerställ att antalet färger matchar antalet år (trimma/återanvänd vid behov)
n_yrs <- nlevels(kommun2$ar_fac)
pal   <- if (length(cols) >= n_yrs) cols[seq_len(n_yrs)] else rep(cols, length.out = n_yrs)
# 3) Karta: kategorisk färgsättning, svart för "Inaktuell…"
mapview(kommun2,
zcol = "ar_fac",                # faktor = kategorisk legend med år
col.regions = pal,              # exakt en färg per år
na.color = "black",             # "Inaktuell…" (ej år) blir svart
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
nlevels(kommun2$ar_fac)
levels(kommun2$ar_fac)
cols <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#C6D750","#DBDF50","#F1E750","#F4DA49","#F7CD42","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FC8C21","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F64B00","#F13E00","#ED3100","#E92400","#E51700","#E10A00",
"#DD0000","#D71000","#D12000","#CB3000","#C54000","#D73027"
))[1:25]
pal <- cols  # now exactly 25 colors
# 3) Karta: kategorisk färgsättning, svart för "Inaktuell…"
mapview(kommun2,
zcol = "ar_fac",                # faktor = kategorisk legend med år
col.regions = pal,              # exakt en färg per år
na.color = "black",             # "Inaktuell…" (ej år) blir svart
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# 2) DINA fasta färger, men omvänd ordning (rött -> grönt)
cols <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#DBDF50","#F1E750","#F4DA49","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F13E00","#ED3100","#E92400","#E51700","#E10A00",
"#DD0000","#D71000","#D12000","#CB3000","#C54000"
))
# 2) DINA fasta färger, men omvänd ordning (rött -> grönt)
cols <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#DBDF50","#F1E750","#F4DA49","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F13E00","#ED3100","#E92400","#E51700","#E10A00",
"#DD0000","#D71000","#D12000","#CB3000","#C54000"
))
# säkerställ att antalet färger matchar antalet år (trimma/återanvänd vid behov)
n_yrs <- nlevels(kommun2$ar_fac)
pal   <- if (length(cols) >= n_yrs) cols[seq_len(n_yrs)] else rep(cols, length.out = n_yrs)
# 3) Karta: kategorisk färgsättning, svart för "Inaktuell…"
mapview(kommun2,
zcol = "ar_fac",                # faktor = kategorisk legend med år
col.regions = pal,              # exakt en färg per år
na.color = "black",             # "Inaktuell…" (ej år) blir svart
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
View(lan)
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0, hide = TRUE, popup = popupTable(lan, zcol = c("lan", "geom")))
View(kommun2)
# 1) Create a categorical variable that keeps either the year or the text
kommun2 <- kommun2 %>%
mutate(
year_or_text = ifelse(
grepl("^\\d{4}$", op_ar_text),
op_ar_text,                          # keep the year as string
"Inaktuell ÖP på grund av avsaknad av planeringsstrategi"  # force one label
),
year_or_text = factor(year_or_text, levels = c(
sort(unique(op_ar_text[grepl("^\\d{4}$", op_ar_text)])),   # all years sorted
"Inaktuell ÖP på grund av avsaknad av planeringsstrategi"  # last
))
)
# 2) Build color palette: 25 year colors + black for "Inaktuell..."
cols_years <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#C6D750","#DBDF50","#F1E750","#F4DA49","#F7CD42","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FC8C21","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F64B00","#F13E00","#ED3100"
))  # 25 colors
cols <- c(cols_years, "black")  # add black for Inaktuell
# 3) Mapview with the new factor (legend will include the text)
mapview(kommun2,
zcol = "year_or_text",
col.regions = cols,
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# build a clean popup table (no ar_fac/ar_num/etc.)
pop <- mapview::popupTable(
kommun2 %>%
sf::st_drop_geometry() %>%
dplyr::transmute(
Kommun = kommunnamn,
`Laga kraft` = op_ar_text,
`Ändr (sum)` = andringar_sum,
`Tillägg (sum)` = tillagg_sum,
PS = planeringsstrategi
),
row.numbers = FALSE, feature.id = FALSE
)
mapview(kommun2,
zcol = "ar_fac",            # still color by year factor
col.regions = pal,          # your 25 reversed colors
na.color = "black",         # Inaktuell… = black
alpha.regions = 0.6,
popup = pop,                # << use the custom popup
layer.name = "Laga kraft (år)") +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# build a clean popup table (no ar_fac/ar_num/etc.)
pop <- mapview::popupTable(
kommun2 %>%
sf::st_drop_geometry() %>%
dplyr::transmute(
Kommun = kommunnamn,
`Laga kraft` = op_ar_text,
`Ändr (sum)` = andringar_sum,
`Tillägg (sum)` = tillagg_sum,
PS = planeringsstrategi
),
row.numbers = FALSE, feature.id = FALSE
)
yrs_chr <- sort(unique(kommun2$op_ar_text[grepl("^\\d{4}$", kommun2$op_ar_text)]))
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
kommun2 <- kommun2 %>%
mutate(
year_or_text = ifelse(grepl("^\\d{4}$", op_ar_text), op_ar_text, lab_inakt),
year_or_text = factor(year_or_text, levels = c(yrs_chr, lab_inakt))  # order fixes legend & colors
)
# 2) colors: 25 year colors (reversed) + black for Inaktuell
cols_years <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#C6D750","#DBDF50","#F1E750","#F4DA49","#F7CD42","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FC8C21","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F64B00","#F13E00","#ED3100"
))[seq_along(yrs_chr)]                         # trim to number of year levels
cols_all <- c(cols_years, "#000000")           # black for Inaktuell
stopifnot(nlevels(kommun2$year_or_text) == length(cols_all))
# 3) map (legend shows text, polygons for Inaktuell are black)
mapview(kommun2,
zcol = "year_or_text",
col.regions = cols_all,
na.color = "black",   # still black if any true NA slip through
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# 1) Create a categorical variable that keeps either the year or the text
# 1) build levels: years + the Inaktuell label
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
# 1) Factor used for coloring (years as strings + the inakt label; NA -> inakt)
kommun2 <- kommun2 %>%
mutate(
year_or_text = case_when(
grepl("^\\d{4}$", op_ar_text) ~ op_ar_text,
TRUE                          ~ lab_inakt
)
)
# make levels = years present (sorted) + inakt last
yrs_present <- sort(unique(kommun2$year_or_text[kommun2$year_or_text != lab_inakt]))
kommun2 <- kommun2 %>%
mutate(year_or_text = factor(year_or_text, levels = c(yrs_present, lab_inakt)))
# 2) Colors: one per level, black for inakt (order must match levels!)
cols_years_full <- rev(c(
"#1A9850","#2FA050","#45A850","#5AB050","#70B750","#85BF50","#9BC750",
"#B0CF50","#C6D750","#DBDF50","#F1E750","#F4DA49","#F7CD42","#FAC03B",
"#FDB334","#FDA62E","#FD9927","#FC8C21","#FB7F1A","#FA7213","#F8650D",
"#F75806","#F64B00","#F13E00","#ED3100","#E92400","#E51700","#E10A00",
"#DD0000","#D71000","#D12000","#CB3000","#C54000","#D73027"
))
cols_all <- c(cols_years_full[seq_along(yrs_present)], "#000000")  # black last
stopifnot(nlevels(kommun2$year_or_text) == length(cols_all))
# 3) Map — now “Inaktuell…” polygons are truly black
mapview(kommun2,
zcol = "year_or_text",
col.regions = cols_all,
na.color = "black",        # safety if any NA slip through
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# --- Labels ---
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
# --- Hard-coded color map (red -> green, 25 years) + black for Inaktuell ---
col_map <- c(
"1990"="#D73027","1991"="#C54000","1992"="#CB3000","2002"="#D12000","2003"="#D71000",
"2005"="#DD0000","2006"="#E10A00","2007"="#E51700","2008"="#E92400","2009"="#ED3100",
"2010"="#F13E00","2011"="#F64B00","2012"="#F75806","2013"="#F8650D","2014"="#FA7213",
"2015"="#FB7F1A","2016"="#FC8C21","2017"="#FD9927","2018"="#FDA62E","2019"="#FDB334",
"2020"="#FAC03B","2021"="#F7CD42","2022"="#F4DA49","2023"="#F1E750","2024"="#DBDF50",
# special label:
!!lab_inakt := "#000000"
)
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
col_map <- c(
"1990"="#D73027","1991"="#C54000","1992"="#CB3000","2002"="#D12000","2003"="#D71000",
"2005"="#DD0000","2006"="#E10A00","2007"="#E51700","2008"="#E92400","2009"="#ED3100",
"2010"="#F13E00","2011"="#F64B00","2012"="#F75806","2013"="#F8650D","2014"="#FA7213",
"2015"="#FB7F1A","2016"="#FC8C21","2017"="#FD9927","2018"="#FDA62E","2019"="#FDB334",
"2020"="#FAC03B","2021"="#F7CD42","2022"="#F4DA49","2023"="#F1E750","2024"="#DBDF50",
"Inaktuell"="#000000"  # temp name
)
# rename the temp name to your long label
names(col_map)[names(col_map) == "Inaktuell"] <- lab_inakt
# --- Factor used for coloring: exact match to the map (year string or the special text) ---
kommun2 <- kommun2 %>%
dplyr::mutate(
z = dplyr::if_else(grepl("^\\d{4}$", op_ar_text), op_ar_text, lab_inakt),
z = factor(z, levels = names(col_map)) %>% droplevels()  # drop unused levels to avoid warnings
)
# --- Colors in the *exact* order of the factor levels present ---
cols_used <- unname(col_map[levels(kommun2$z)])
# --- Map ---
mapview(kommun2,
zcol = "z",
col.regions = cols_used,
na.color = "#000000",     # safety; any true NA still black
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
# 1) hard-coded colors
col_map <- c(
"1990"="#D73027","1991"="#C54000","1992"="#CB3000","2002"="#D12000","2003"="#D71000",
"2005"="#DD0000","2006"="#E10A00","2007"="#E51700","2008"="#E92400","2009"="#ED3100",
"2010"="#F13E00","2011"="#F64B00","2012"="#F75806","2013"="#F8650D","2014"="#FA7213",
"2015"="#FB7F1A","2016"="#FC8C21","2017"="#FD9927","2018"="#FDA62E","2019"="#FDB334",
"2020"="#FAC03B","2021"="#F7CD42","2022"="#F4DA49","2023"="#F1E750","2024"="#DBDF50",
"Inaktuell"="#000000"
)
names(col_map)[names(col_map)=="Inaktuell"] <- lab_inakt
# 2) single factor used for coloring (years or the inakt label)
kommun2 <- kommun2 %>%
mutate(
op_ar_text = str_trim(op_ar_text),
z = if_else(grepl("^\\d{4}$", op_ar_text), op_ar_text, lab_inakt),
z = factor(z, levels = names(col_map)) %>% droplevels()
)
# 3) colors in EXACT order of used levels (match z, not z2)
cols_used <- unname(col_map[levels(kommun2$z)])
stopifnot(nlevels(kommun2$z) == length(cols_used))  # sanity check
# 4) map
mapview(kommun2,
zcol = "z",
col.regions = cols_used,
na.color = "#000000",   # safety
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
# 1) hard-coded colors
col_map <- c(
"1990"="#D73027","1991"="#C54000","1992"="#CB3000","2002"="#D12000","2003"="#D71000",
"2005"="#DD0000","2006"="#E10A00","2007"="#E51700","2008"="#E92400","2009"="#ED3100",
"2010"="#F13E00","2011"="#F64B00","2012"="#F75806","2013"="#F8650D","2014"="#FA7213",
"2015"="#FB7F1A","2016"="#FC8C21","2017"="#FD9927","2018"="#FDA62E","2019"="#FDB334",
"2020"="#FAC03B","2021"="#F7CD42","2022"="#F4DA49","2023"="#F1E750","2024"="#DBDF50",
"Inaktuell"="#000000"
)
names(col_map)[names(col_map)=="Inaktuell"] <- lab_inakt
# 2) factor to color by (years or the inakt label)
kommun2 <- kommun2 %>%
mutate(
op_ar_text = str_trim(op_ar_text),
z = if_else(grepl("^\\d{4}$", op_ar_text), op_ar_text, lab_inakt),
z = factor(z, levels = names(col_map))
)
# 3) colors in EXACT order of used levels  (coerce levels to character!)
levs <- levels(kommun2$z)
cols_used <- unname(col_map[as.character(levs)])
# sanity check
stopifnot(length(cols_used) == length(levs))
# 4) map
mapview(kommun2,
zcol = "z",
col.regions = cols_used,
na.color = "#000000",
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
# 4) map
mapview(kommun2,
zcol = "z",
col.regions = cols_used,
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
setdiff(levels(kommun2$z), names(col_map))   # should be character(0)
lab_inakt <- "Inaktuell ÖP på grund av avsaknad av planeringsstrategi"
# hard-coded colors (as before)
col_map <- c(
"1990"="#D73027","1991"="#C54000","1992"="#CB3000","2002"="#D12000","2003"="#D71000",
"2005"="#DD0000","2006"="#E10A00","2007"="#E51700","2008"="#E92400","2009"="#ED3100",
"2010"="#F13E00","2011"="#F64B00","2012"="#F75806","2013"="#F8650D","2014"="#FA7213",
"2015"="#FB7F1A","2016"="#FC8C21","2017"="#FD9927","2018"="#FDA62E","2019"="#FDB334",
"2020"="#FAC03B","2021"="#F7CD42","2022"="#F4DA49","2023"="#F1E750","2024"="#DBDF50",
"Inaktuell"="#000000"
)
names(col_map)[names(col_map)=="Inaktuell"] <- lab_inakt
# factor used for coloring (year string or the special text)
kommun2 <- kommun2 %>%
dplyr::mutate(
op_ar_text = stringr::str_trim(op_ar_text),
z = dplyr::if_else(grepl("^\\d{4}$", op_ar_text), op_ar_text, lab_inakt),
z = factor(z, levels = names(col_map)) %>% droplevels()
)
# palette FUNCTION mapped to the current factor levels (no recycling possible)
levs <- levels(kommun2$z)
cols_used <- as.character(unname(col_map[levs]))
pal_fun <- leaflet::colorFactor(palette = cols_used, domain = levs, ordered = TRUE)
mapview(kommun2,
zcol = "z",
col.regions = pal_fun,      # << pass function
na.color = "#000000",       # safety
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
mapview(kommun2, zcol = "op_ar_text", at = brks_kom,
col.regions = pal_fun, alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
safe_breaks <- function(yrs, expand = 1L, by = 1L) {
if (is.null(yrs) || length(yrs) == 0) return(integer(0))
if (all(is.na(yrs))) return(integer(0))
rng <- range(yrs, na.rm = TRUE)
if (any(!is.finite(rng))) return(integer(0))
seq.int(rng[1] - expand, rng[2] + expand, by = by)
}
brks_kom <- safe_breaks(yrs)
yrs <- readr::parse_number(op_ar$op_ar_text)
# eller droppa ogiltiga
yrs <- suppressWarnings(as.integer(yrs))
mapview(kommun2, zcol = "op_ar_text", at = brks_kom,
col.regions = pal_fun, alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Laga kraft"="op_ar_text",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
kommun2 <- kommun2 %>%
mutate(
op_status = case_when(
`År 2024` == "Inaktuell ÖP på grund av avsaknad av planeringsstrategi" ~ "Ogiltig",
TRUE ~ "Giltig"
)
)
pal_fun <- c(
"Ogiltig" = "purple4",   # mörk lila
"Giltig"  = "lightgrey"  # eller annan skala för årtal
)
mapview(kommun2, zcol = "op_status",
col.regions = pal_fun[kommun2$op_status],
alpha.regions = 0.6,
popup = TRUE,
popup.vars = c("Kommun"="kommunnamn",
"Status"="op_status",
"Laga kraft"="År 2024",
"Ändr (sum)"="andringar_sum",
"Tillägg (sum)"="tillagg_sum",
"PS"="planeringsstrategi")) +
mapview(lan, col.regions = NA, color = "black", lwd = 2, alpha.regions = 0)
